/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package isel.pfc.core;

//import isel.pfc.analyzer.TechniqueAnalyser;
import isel.pfc.api.FileGroupInfo;
import isel.pfc.api.FileLoader;
import isel.pfc.api.PrintableMap;
import isel.pfc.api.Specialization;
import isel.pfc.api.TechniqChildFactory;
import isel.pfc.api.Technique;
import isel.pfc.calculus.SymbolFrequency;
import isel.pfc.decoder.AppDecoder;
import isel.pfc.filesHandler.FileHandler;
import static isel.pfc.filesHandler.FileHandler.listFilesOrdByExt;
import isel.pfc.specialization.Creator;
import isel.pfc.specialization.Loader;
import isel.pfc.specialization.TechniqueAnalyser;
import java.awt.BorderLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map.Entry;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;
import sevenZip.LzmaMain;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//isel.pfc.core//pfcWindow//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "pfcWindowTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "isel.pfc.core.pfcWindowTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_pfcWindowAction",
        preferredID = "pfcWindowTopComponent"
)
@Messages({
    "CTL_pfcWindowAction=pfcWindow",
    "CTL_pfcWindowTopComponent=pfcWindow Window",
    "HINT_pfcWindowTopComponent=This is a pfcWindow window"
})
public final class pfcWindowTopComponent extends TopComponent implements LookupListener{
    
    private InstanceContent content;
    
    //Might move these into a class
    private String prevPath = "";
    private Iterable<File> filesAtPrevLocation = null;
    private String techniq; // = ""
    
    public pfcWindowTopComponent() {
        initComponents();
        setName(Bundle.CTL_pfcWindowTopComponent());
        setToolTipText(Bundle.HINT_pfcWindowTopComponent());
        content = new InstanceContent();
        associateLookup(new AbstractLookup(content));
        techniq = techniquesComboBox.getSelectedItem().toString();
        extensionsComboBox.setEnabled(false);
        //setLayout(new BorderLayout()); 
        //add(new BeanTreeView(), BorderLayout.CENTER);
        //mgr.setRootContext(new AbstractNode(Children.create(new TechniqChildFactory(), true)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SpecializeOptionDialog = new javax.swing.JDialog();
        acceptToSpecializeBTN = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        NotAcceptSpecializeBTN = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        FileBrowser = new javax.swing.JFileChooser();
        freqSpecialzDialog = new javax.swing.JDialog();
        jScrollPane8 = new javax.swing.JScrollPane();
        twoCharsTextArea = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        threeCharsTextArea = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        fourCharsTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        freqSpecialzDialog_SpecialBTN = new javax.swing.JButton();
        freqSpecialzDialog_CancelBTN = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        userWordsTextArea = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        speciNameTextArea = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        chosenTechniqueTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        descTextArea = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        fileFormatTextField = new javax.swing.JTextField();
        searchBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SearchWindow = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        fileWindow = new javax.swing.JTextArea();
        foundExtensionsLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        techniquesComboBox = new javax.swing.JComboBox();
        jScrollPane12 = new javax.swing.JScrollPane();
        outputWindow = new javax.swing.JTextArea();
        Compress_BTN = new javax.swing.JButton();
        DecompressBTN = new javax.swing.JButton();
        special_btn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        symbolFreqInputWindow = new javax.swing.JTextArea();
        frequencyBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        symbolFreqOutputWindow = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        lzmaInputWindow = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        lzmaOutWindow = new javax.swing.JTextArea();
        lzma_compress_btn = new javax.swing.JButton();
        lzmaDictSizeComboBox = new javax.swing.JComboBox();
        lzmaModeComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fileBrowserBTN = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        extensionsComboBox = new javax.swing.JComboBox();
        specialzSearchBTN = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        AnaliseBestTechniqueBTN = new javax.swing.JButton();
        autoSpecializationsComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        manualSpecializationComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        useAutoGen_BTN = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(acceptToSpecializeBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.acceptToSpecializeBTN.text")); // NOI18N
        acceptToSpecializeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptToSpecializeBTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jButton2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel7.text")); // NOI18N

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(jList1);

        org.openide.awt.Mnemonics.setLocalizedText(NotAcceptSpecializeBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.NotAcceptSpecializeBTN.text")); // NOI18N
        NotAcceptSpecializeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotAcceptSpecializeBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SpecializeOptionDialogLayout = new javax.swing.GroupLayout(SpecializeOptionDialog.getContentPane());
        SpecializeOptionDialog.getContentPane().setLayout(SpecializeOptionDialogLayout);
        SpecializeOptionDialogLayout.setHorizontalGroup(
            SpecializeOptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SpecializeOptionDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SpecializeOptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SpecializeOptionDialogLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SpecializeOptionDialogLayout.createSequentialGroup()
                        .addGroup(SpecializeOptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(SpecializeOptionDialogLayout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SpecializeOptionDialogLayout.createSequentialGroup()
                                .addComponent(acceptToSpecializeBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NotAcceptSpecializeBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)))
                        .addGap(93, 93, 93))))
        );
        SpecializeOptionDialogLayout.setVerticalGroup(
            SpecializeOptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SpecializeOptionDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGroup(SpecializeOptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SpecializeOptionDialogLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SpecializeOptionDialogLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(SpecializeOptionDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptToSpecializeBTN)
                    .addComponent(jButton2)
                    .addComponent(NotAcceptSpecializeBTN))
                .addContainerGap())
        );

        FileBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileBrowserActionPerformed(evt);
            }
        });

        twoCharsTextArea.setColumns(20);
        twoCharsTextArea.setRows(5);
        jScrollPane8.setViewportView(twoCharsTextArea);

        threeCharsTextArea.setColumns(20);
        threeCharsTextArea.setRows(5);
        jScrollPane9.setViewportView(threeCharsTextArea);

        fourCharsTextArea.setColumns(20);
        fourCharsTextArea.setRows(5);
        jScrollPane10.setViewportView(fourCharsTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel10.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(freqSpecialzDialog_SpecialBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.freqSpecialzDialog_SpecialBTN.text")); // NOI18N
        freqSpecialzDialog_SpecialBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freqSpecialzDialog_SpecialBTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(freqSpecialzDialog_CancelBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.freqSpecialzDialog_CancelBTN.text")); // NOI18N
        freqSpecialzDialog_CancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freqSpecialzDialog_CancelBTNActionPerformed(evt);
            }
        });

        userWordsTextArea.setColumns(20);
        userWordsTextArea.setRows(5);
        jScrollPane11.setViewportView(userWordsTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel11.text")); // NOI18N

        speciNameTextArea.setColumns(20);
        speciNameTextArea.setRows(5);
        jScrollPane13.setViewportView(speciNameTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel12.text")); // NOI18N

        chosenTechniqueTextField.setEditable(false);
        chosenTechniqueTextField.setText(org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.chosenTechniqueTextField.text")); // NOI18N
        chosenTechniqueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chosenTechniqueTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel14.text")); // NOI18N

        descTextArea.setColumns(20);
        descTextArea.setRows(5);
        jScrollPane14.setViewportView(descTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel15.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jButton1.text")); // NOI18N

        fileFormatTextField.setEditable(false);
        fileFormatTextField.setText(org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.fileFormatTextField.text")); // NOI18N
        fileFormatTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileFormatTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout freqSpecialzDialogLayout = new javax.swing.GroupLayout(freqSpecialzDialog.getContentPane());
        freqSpecialzDialog.getContentPane().setLayout(freqSpecialzDialogLayout);
        freqSpecialzDialogLayout.setHorizontalGroup(
            freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                        .addComponent(chosenTechniqueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jButton1))
                    .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane11)
                                        .addComponent(jLabel12)
                                        .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                                            .addComponent(freqSpecialzDialog_SpecialBTN)
                                            .addGap(18, 18, 18)
                                            .addComponent(freqSpecialzDialog_CancelBTN)))
                                    .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addComponent(fileFormatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        freqSpecialzDialogLayout.setVerticalGroup(
            freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, freqSpecialzDialogLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(fileFormatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                        .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(chosenTechniqueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addGap(28, 28, 28)
                        .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane10)
                                .addComponent(jScrollPane9)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(freqSpecialzDialogLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(freqSpecialzDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(freqSpecialzDialog_SpecialBTN)
                    .addComponent(freqSpecialzDialog_CancelBTN))
                .addGap(35, 35, 35))
        );

        org.openide.awt.Mnemonics.setLocalizedText(searchBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.searchBTN.text")); // NOI18N
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        SearchWindow.setColumns(20);
        SearchWindow.setRows(5);
        jScrollPane1.setViewportView(SearchWindow);

        fileWindow.setColumns(20);
        fileWindow.setRows(5);
        jScrollPane2.setViewportView(fileWindow);

        org.openide.awt.Mnemonics.setLocalizedText(foundExtensionsLabel, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.foundExtensionsLabel.text")); // NOI18N
        foundExtensionsLabel.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel2.text")); // NOI18N

        techniquesComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "LZW", "LZ77", "Arithmetic", "Huffman", "Deflate" }));
        techniquesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                techniquesComboBoxActionPerformed(evt);
            }
        });

        outputWindow.setColumns(20);
        outputWindow.setRows(5);
        jScrollPane12.setViewportView(outputWindow);

        org.openide.awt.Mnemonics.setLocalizedText(Compress_BTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.Compress_BTN.text")); // NOI18N
        Compress_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Compress_BTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(DecompressBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.DecompressBTN.text")); // NOI18N
        DecompressBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecompressBTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(special_btn, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.special_btn.text")); // NOI18N
        special_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                special_btnActionPerformed(evt);
            }
        });

        symbolFreqInputWindow.setColumns(20);
        symbolFreqInputWindow.setRows(5);
        jScrollPane3.setViewportView(symbolFreqInputWindow);

        org.openide.awt.Mnemonics.setLocalizedText(frequencyBtn, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.frequencyBtn.text")); // NOI18N
        frequencyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frequencyBtnActionPerformed(evt);
            }
        });

        symbolFreqOutputWindow.setColumns(20);
        symbolFreqOutputWindow.setRows(5);
        jScrollPane4.setViewportView(symbolFreqOutputWindow);

        lzmaInputWindow.setColumns(20);
        lzmaInputWindow.setRows(5);
        jScrollPane5.setViewportView(lzmaInputWindow);

        lzmaOutWindow.setColumns(20);
        lzmaOutWindow.setRows(5);
        jScrollPane6.setViewportView(lzmaOutWindow);

        org.openide.awt.Mnemonics.setLocalizedText(lzma_compress_btn, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.lzma_compress_btn.text")); // NOI18N
        lzma_compress_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lzma_compress_btnActionPerformed(evt);
            }
        });

        lzmaDictSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8MB", "4MB", "1GB", "32MB" }));
        lzmaDictSizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lzmaDictSizeComboBoxActionPerformed(evt);
            }
        });

        lzmaModeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "normal", "fast" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(fileBrowserBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.fileBrowserBTN.text")); // NOI18N
        fileBrowserBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileBrowserBTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton4, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jButton4.text")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        extensionsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Extensions" }));
        extensionsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                extensionsComboBoxItemStateChanged(evt);
            }
        });
        extensionsComboBox.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                extensionsComboBoxComponentHidden(evt);
            }
        });
        extensionsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extensionsComboBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(specialzSearchBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.specialzSearchBTN.text")); // NOI18N
        specialzSearchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialzSearchBTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel13.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(AnaliseBestTechniqueBTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.AnaliseBestTechniqueBTN.text")); // NOI18N
        AnaliseBestTechniqueBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnaliseBestTechniqueBTNActionPerformed(evt);
            }
        });

        autoSpecializationsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoSpecializationsComboBoxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(useAutoGen_BTN, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.useAutoGen_BTN.text")); // NOI18N
        useAutoGen_BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useAutoGen_BTNActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButton5, org.openide.util.NbBundle.getMessage(pfcWindowTopComponent.class, "pfcWindowTopComponent.jButton5.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1))
                                .addGap(182, 182, 182)
                                .addComponent(searchBTN))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(extensionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(techniquesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(foundExtensionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(special_btn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(DecompressBTN)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(AnaliseBestTechniqueBTN)
                                            .addComponent(specialzSearchBTN)
                                            .addComponent(Compress_BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(autoSpecializationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(useAutoGen_BTN))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(manualSpecializationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton5))
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel1))
                                        .addGap(93, 93, 93)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(fileBrowserBTN)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(frequencyBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lzma_compress_btn)
                                    .addComponent(lzmaModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lzmaDictSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchBTN)
                        .addComponent(fileBrowserBTN)
                        .addComponent(jButton4)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(foundExtensionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(extensionsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(specialzSearchBTN))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(techniquesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AnaliseBestTechniqueBTN)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(autoSpecializationsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(useAutoGen_BTN))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(manualSpecializationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Compress_BTN)
                                    .addComponent(jButton5))))
                        .addGap(5, 5, 5)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(special_btn)
                    .addComponent(DecompressBTN))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addComponent(frequencyBtn)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lzma_compress_btn)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lzmaModeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lzmaDictSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    //READ NODE API!!!
    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        String path = SearchWindow.getText();
        path = path.replace("\\", "\\\\");
        prevPath = path;
        StringBuilder sb = new StringBuilder();
        List<File> files = FileHandler.getFilesAtLocation(path);
        HashMap<String,FileGroupInfo> groups = listFilesOrdByExt(path);
        Loader loader = new Loader();
        try{
            List<String> formats = loader.listAvailableSpecializations();  //<---- Formats
        }catch(Exception e){}
        
        for(Entry<String,FileGroupInfo> entry : groups.entrySet()){            
            for(File f : entry.getValue().getFiles()){
                String line = f.getName()+" - "+f.length()+"bytes";
                sb.append(line).append(System.lineSeparator());
            }
            extensionsComboBox.addItem(entry.getKey());
        }
        
        //There are two categories of specializations: Manual and auto
        //
        //
        foundExtensionsLabel.setEnabled(true);
        Collection<? extends Specialization> specializations = Lookup.getDefault().lookupAll(Specialization.class);
        fileWindow.setText(sb.toString());
        extensionsComboBox.setEnabled(true);
    }//GEN-LAST:event_searchBTNActionPerformed
    /**
     * 
     * @param evt 
     */
    private void techniquesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_techniquesComboBoxActionPerformed
        Object option = techniquesComboBox.getSelectedItem();
        techniq = option.toString();
    }//GEN-LAST:event_techniquesComboBoxActionPerformed

    private void Compress_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Compress_BTNActionPerformed
        if(prevPath.isEmpty())return;
        Collection<? extends Technique> techs = Lookup.getDefault().lookupAll(Technique.class);
        File f;
        String ext = extensionsComboBox.getSelectedItem().toString();
        StringBuilder sb = new StringBuilder();
        //TechniqueAnalyser a = new TechniqueAnalyser();
        //a.AnalyseForSpecialization(".java");
        for(Technique t : techs){
            if(t.getName().equalsIgnoreCase(techniq)){
                f = t.compress(prevPath,ext);
                String line = f.getName()+" - "+f.length()+"bytes";
                sb.append(line).append("\n");
                outputWindow.setText(sb.toString());
                return;
            }
        }
    }//GEN-LAST:event_Compress_BTNActionPerformed

    private void DecompressBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecompressBTNActionPerformed
        String path = "D:\\OneDrive\\Projecto final de curso 1415I\\Compressao Especializada\\CompressionApp\\files\\agenda.bgz";
        File file = new File(path);
        try {
            //AppDecoder.getCompressedFiles(file);
            AppDecoder.decode(file);
        } catch (FileNotFoundException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        } catch (InstantiationException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IllegalAccessException ex) {
            Exceptions.printStackTrace(ex);
        }
        /*
        Collection<? extends Technique> techs = Lookup.getDefault().lookupAll(Technique.class);
        File f;
        StringBuilder sb = new StringBuilder();
        try {
            Technique t = AppDecoder.getTechnique(prevPath);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        for(Technique t : techs){
            
        }
        */
    }//GEN-LAST:event_DecompressBTNActionPerformed

    private void special_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_special_btnActionPerformed
        Collection<? extends Specialization> specials = Lookup.getDefault().lookupAll(Specialization.class);
        File f;
        StringBuilder sb = new StringBuilder();
        for(Specialization s : specials){
            if(s.getName().equalsIgnoreCase("jlzw")){
                f = s.executeTechnique(prevPath);
                String line = f.getName()+" - "+f.length()+"bytes";
                sb.append(line).append("\n");
                outputWindow.setText(sb.toString());
                return;
            }
        }
        //special_btn.isSelected()
    }//GEN-LAST:event_special_btnActionPerformed

    private void frequencyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frequencyBtnActionPerformed
        String path = symbolFreqInputWindow.getText();
        path = path.replace("\\", "\\\\");
        
        SymbolFrequency freq = new SymbolFrequency(new File(path));
        try{
            List<HashMap<String,Integer>> freqs = freq.findMostFrequentSymbols();
            freqSpecialzDialog.setVisible(true);
            twoCharsTextArea.setText(path);
        }catch(IOException e){}
    }//GEN-LAST:event_frequencyBtnActionPerformed

    private void lzma_compress_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lzma_compress_btnActionPerformed
        String path = lzmaInputWindow.getText();
        path.replace("\\", "\\\\");
        Collection<? extends Technique> techs = Lookup.getDefault().lookupAll(Technique.class);
        File f;
        for(Technique t : techs){
            if(t.getName().equalsIgnoreCase("lzma")){
                try {
                    Constructor ctor = t.getClass().getDeclaredConstructor(File.class, String.class, String.class);
                    f = new File(path);
                    LzmaMain lzma = new LzmaMain(f,lzmaModeComboBox.getSelectedItem().toString(),lzmaDictSizeComboBox.getSelectedItem().toString());
                    lzma.compress();
                } catch (NoSuchMethodException ex) {
                    Exceptions.printStackTrace(ex);
                } catch (SecurityException ex) {
                    Exceptions.printStackTrace(ex);
                }
                t.getClass();
            }
        }
    }//GEN-LAST:event_lzma_compress_btnActionPerformed

    private void lzmaDictSizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lzmaDictSizeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lzmaDictSizeComboBoxActionPerformed

    private void acceptToSpecializeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptToSpecializeBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acceptToSpecializeBTNActionPerformed

    private void FileBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileBrowserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FileBrowserActionPerformed

    private void fileBrowserBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileBrowserBTNActionPerformed
        FileBrowser.showOpenDialog(pfcWindowTopComponent.this);
    }//GEN-LAST:event_fileBrowserBTNActionPerformed

    private void freqSpecialzDialog_CancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freqSpecialzDialog_CancelBTNActionPerformed
        freqSpecialzDialog.dispose();
    }//GEN-LAST:event_freqSpecialzDialog_CancelBTNActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        fileFormatTextField.setText("txt");
        freqSpecialzDialog.setVisible(true);
        //String x = extensionsComboBox.getSelectedItem().toString();
        String path = "D:\\OneDrive\\Projecto final de curso 1415I\\Compressao Especializada\\CompressionApp\\files";
        File f = new File(path);
        TechniqueAnalyser ax = new TechniqueAnalyser();
        String anem = ax.benchMarkFile(f);                  //<---- Kinda stupid as it is (see inside)
        chosenTechniqueTextField.setText(anem);
        try {
            SymbolFrequency freq = new SymbolFrequency(path,".txt");
            List<HashMap<String,Integer>> list = freq.findMostFrequentSymbols();
            
            //  <----------------------------------Dont you dare publish this!!
            HashMap<String,Integer> map1 = list.get(0);
            twoCharsTextArea.setText(new PrintableMap<String,Integer>(map1).toString());
            HashMap<String,Integer> map2 = list.get(1);
            threeCharsTextArea.setText(new PrintableMap<String,Integer>(map2).toString());
            HashMap<String,Integer> map3 = list.get(2);
            fourCharsTextArea.setText(new PrintableMap<String,Integer>(map3).toString());
            
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void NotAcceptSpecializeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotAcceptSpecializeBTNActionPerformed
        SpecializeOptionDialog.dispose();
    }//GEN-LAST:event_NotAcceptSpecializeBTNActionPerformed

    private void extensionsComboBoxComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_extensionsComboBoxComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_extensionsComboBoxComponentHidden

    private void specialzSearchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialzSearchBTNActionPerformed
        Loader loader = new Loader();
        try{
            List<String> sps = loader.listAvailableSpecializations();
        }catch(Exception e){Exceptions.printStackTrace(e);}
        
    }//GEN-LAST:event_specialzSearchBTNActionPerformed

    private void AnaliseBestTechniqueBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnaliseBestTechniqueBTNActionPerformed
        String path = "D:\\OneDrive\\Projecto final de curso 1415I\\Compressao Especializada\\CompressionApp\\files\\agenda.java";
        File f = new File(path);
        TechniqueAnalyser ax = new TechniqueAnalyser();
        String anem = ax.benchMarkFile(f);
        chosenTechniqueTextField.setText(anem);
    }//GEN-LAST:event_AnaliseBestTechniqueBTNActionPerformed

    private void chosenTechniqueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chosenTechniqueTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chosenTechniqueTextFieldActionPerformed

    private void freqSpecialzDialog_SpecialBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freqSpecialzDialog_SpecialBTNActionPerformed
        String format = fileFormatTextField.getText();
        String name = speciNameTextArea.getText();
        String techn = chosenTechniqueTextField.getText();
        String desc = descTextArea.getText();
        List<String> two = new LinkedList<String>(Arrays.asList(twoCharsTextArea.getText().split("\\r?\\n")));
        List<String> three = new LinkedList<String>(Arrays.asList(threeCharsTextArea.getText().split("\\r?\\n")));
        List<String> four = new LinkedList<String>(Arrays.asList(fourCharsTextArea.getText().split("\\r?\\n")));
        two.addAll(three);
        two.addAll(four);
        Creator creator = new Creator();
        creator.publish(name, techn, format, desc, two);
        //creator.publish(prevPath, techniq, prevPath, techniq, null);
    }//GEN-LAST:event_freqSpecialzDialog_SpecialBTNActionPerformed

    private void fileFormatTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileFormatTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileFormatTextFieldActionPerformed

    private void extensionsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_extensionsComboBoxItemStateChanged
        String ext = extensionsComboBox.getSelectedItem().toString();
        Loader loader = new Loader();
        //loader.   Needs a filter
    }//GEN-LAST:event_extensionsComboBoxItemStateChanged

    private void useAutoGen_BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useAutoGen_BTNActionPerformed
        String name = autoSpecializationsComboBox.getSelectedItem().toString();
        Loader loader = new Loader();
        File file = loader.getAutoGenSpecialization(name);
        try {
            AppDecoder.processAutoGenSpecialization(file);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_useAutoGen_BTNActionPerformed

    private void extensionsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extensionsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_extensionsComboBoxActionPerformed

    private void autoSpecializationsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoSpecializationsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autoSpecializationsComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnaliseBestTechniqueBTN;
    private javax.swing.JButton Compress_BTN;
    private javax.swing.JButton DecompressBTN;
    private javax.swing.JFileChooser FileBrowser;
    private javax.swing.JButton NotAcceptSpecializeBTN;
    private javax.swing.JTextArea SearchWindow;
    private javax.swing.JDialog SpecializeOptionDialog;
    private javax.swing.JButton acceptToSpecializeBTN;
    private javax.swing.JComboBox autoSpecializationsComboBox;
    private javax.swing.JTextField chosenTechniqueTextField;
    private javax.swing.JTextArea descTextArea;
    private javax.swing.JComboBox extensionsComboBox;
    private javax.swing.JButton fileBrowserBTN;
    private javax.swing.JTextField fileFormatTextField;
    private javax.swing.JTextArea fileWindow;
    private javax.swing.JLabel foundExtensionsLabel;
    private javax.swing.JTextArea fourCharsTextArea;
    private javax.swing.JDialog freqSpecialzDialog;
    private javax.swing.JButton freqSpecialzDialog_CancelBTN;
    private javax.swing.JButton freqSpecialzDialog_SpecialBTN;
    private javax.swing.JButton frequencyBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JComboBox lzmaDictSizeComboBox;
    private javax.swing.JTextArea lzmaInputWindow;
    private javax.swing.JComboBox lzmaModeComboBox;
    private javax.swing.JTextArea lzmaOutWindow;
    private javax.swing.JButton lzma_compress_btn;
    private javax.swing.JComboBox manualSpecializationComboBox;
    private javax.swing.JTextArea outputWindow;
    private javax.swing.JButton searchBTN;
    private javax.swing.JTextArea speciNameTextArea;
    private javax.swing.JButton special_btn;
    private javax.swing.JButton specialzSearchBTN;
    private javax.swing.JTextArea symbolFreqInputWindow;
    private javax.swing.JTextArea symbolFreqOutputWindow;
    private javax.swing.JComboBox techniquesComboBox;
    private javax.swing.JTextArea threeCharsTextArea;
    private javax.swing.JTextArea twoCharsTextArea;
    private javax.swing.JButton useAutoGen_BTN;
    private javax.swing.JTextArea userWordsTextArea;
    // End of variables declaration//GEN-END:variables
    
    private Lookup.Result<Technique> result = null;
    
    @Override
    public void componentOpened() {
        result = Utilities.actionsGlobalContext().lookupResult(Technique.class); 
        result.addLookupListener (this);
        Collection<? extends Technique> allTechs = result.allInstances();
        for(Technique t : allTechs){
            techniquesComboBox.addItem(t.getName());
        }
    }

    @Override
    public void componentClosed() {
        result.removeLookupListener(this);
    }
    
    @Override
    public void resultChanged(LookupEvent le) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    
    private final ExplorerManager mgr = new ExplorerManager();
    



}
